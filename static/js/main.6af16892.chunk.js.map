{"version":3,"sources":["util.js","types.js","components/Cart.js","actions/cartActions.js","actions/orderActions.js","components/Filter.js","actions/productActions.js","components/Products.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","App.js","index.js"],"names":["formatCurrency","num","Number","toFixed","toLocaleString","FETCH_PRODUCTS","FILTER_PRODUCTS_BY_SIZE","ORDER_PRODUCTS_BY_PRICE","ADD_TO_CART","REMOVE_FROM_CART","CREATE_ORDER","CLEAR_ORDER","FETCH_ORDERS","Cart","props","handleInput","e","setState","target","name","value","createOrder","preventDefault","order","state","email","address","cartItems","total","reduce","a","c","price","count","closeModal","clearOrder","showCheckout","this","length","className","isOpen","onRequestClose","onClick","_id","createdAt","map","x","title","left","cascade","item","src","image","alt","removeFromCart","right","onSubmit","type","required","onChange","Component","connect","cart","product","dispatch","getState","slice","filter","payload","localStorage","setItem","JSON","stringify","alert","console","log","clear","Filter","filteredProducts","sort","sortProducts","size","filterProducts","products","items","filteredItems","availableSizes","indexOf","sortedProducts","b","Products","openModal","fetchProducts","bottom","href","addToCart","description","fetch","headers","then","response","json","myJson","alreadyExists","forEach","push","composeEnhacer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","action","pload","parse","getItem","orders","applyMiddleware","thunk","App","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6af16892.chunk.js","sourcesContent":["export default function formatCurrency(num){\r\n    return \"$\"+ Number(num.toFixed(1)).toLocaleString() + \" \";\r\n}","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\nexport const FILTER_PRODUCTS_BY_SIZE = \"FILTER_PRODUCTS_BY_SIZE\";\r\nexport const ORDER_PRODUCTS_BY_PRICE = \"ORDER_PRODUCTS_BY_PRICE\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CREATE_ORDER = \"CREATE_ORDER\";\r\nexport const CLEAR_ORDER = \"CLEAR_ORDER\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const FETCH_ORDERS = \"FETCH_ORDERS\";\r\n","import React, { Component } from \"react\";\nimport formatCurrency from \"../util\";\nimport Fade from \"react-reveal/Fade\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport Zoom from \"react-reveal/Zoom\";\nimport { removeFromCart } from \"../actions/cartActions\";\nimport { createOrder, clearOrder } from \"../actions/orderActions\";\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      address: \"\",\n      showCheckout: false,\n    };\n  }\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  createOrder = (e) => {\n    e.preventDefault();\n    const order = {\n      name: this.state.name,\n      email: this.state.email,\n      address: this.state.address,\n      cartItems: this.props.cartItems,\n      total: this.props.cartItems.reduce((a, c) => a + c.price * c.count, 0),\n    };\n    this.props.createOrder(order);\n  };\n  closeModal = () => {\n    this.props.clearOrder();\n  };\n  render() {\n    const { cartItems, order } = this.props;\n    return (\n      <div>\n        {cartItems.length === 0 ? (\n          <div className=\"cart cart-header\">Cart is empty</div>\n        ) : (\n          <div className=\"cart cart-header\">\n            You have {cartItems.length} in the cart{\" \"}\n          </div>\n        )}\n\n        {order && (\n          <Modal isOpen={true} onRequestClose={this.closeModal}>\n            <Zoom>\n              <button className=\"close-modal\" onClick={this.closeModal}>\n                x\n              </button>\n              <div className=\"order-details\">\n                <h3 className=\"success-message\">Your order has been placed.</h3>\n                <h2>Order {order._id}</h2>\n                <ul>\n                  <li>\n                    <div>Name:</div>\n                    <div>{order.name}</div>\n                  </li>\n                  <li>\n                    <div>Email:</div>\n                    <div>{order.email}</div>\n                  </li>\n                  <li>\n                    <div>Address:</div>\n                    <div>{order.address}</div>\n                  </li>\n                  <li>\n                    <div>Date:</div>\n                    <div>{order.createdAt}</div>\n                  </li>\n                  <li>\n                    <div>Total:</div>\n                    <div>{formatCurrency(order.total)}</div>\n                  </li>\n                  <li>\n                    <div>Cart Items:</div>\n                    <div>\n                      {order.cartItems.map((x) => (\n                        <div>\n                          {x.count} {\" x \"} {x.title}\n                        </div>\n                      ))}\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </Zoom>\n          </Modal>\n        )}\n        <div>\n          <div className=\"cart\">\n            <Fade left cascade>\n              <ul className=\"cart-items\">\n                {cartItems.map((item) => (\n                  <li key={item._id}>\n                    <div>\n                      <img src={item.image} alt={item.title}></img>\n                    </div>\n                    <div>\n                      <div>{item.title}</div>\n                      <div className=\"right\">\n                        {formatCurrency(item.price)} x {item.count}{\" \"}\n                        <button\n                          className=\"button\"\n                          onClick={() => this.props.removeFromCart(item)}\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </Fade>\n          </div>\n          {cartItems.length !== 0 && (\n            <div>\n              <div className=\"cart\">\n                <div className=\"total\">\n                  <div>\n                    Total:{\" \"}\n                    {formatCurrency(\n                      cartItems.reduce((a, c) => a + c.price * c.count, 0)\n                    )}\n                  </div>\n                  <button\n                    onClick={() => {\n                      this.setState({ showCheckout: true });\n                    }}\n                    className=\"button primary\"\n                  >\n                    Proceed\n                  </button>\n                </div>\n              </div>\n              {this.state.showCheckout && (\n                <Fade right cascade>\n                  <div className=\"cart\">\n                    <form onSubmit={this.createOrder}>\n                      <ul className=\"form-container\">\n                        <li>\n                          <label>Email</label>\n                          <input\n                            name=\"email\"\n                            type=\"email\"\n                            required\n                            onChange={this.handleInput}\n                          ></input>\n                        </li>\n                        <li>\n                          <label>Name</label>\n                          <input\n                            name=\"name\"\n                            type=\"text\"\n                            required\n                            onChange={this.handleInput}\n                          ></input>\n                        </li>\n                        <li>\n                          <label>Address</label>\n                          <input\n                            name=\"address\"\n                            type=\"text\"\n                            required\n                            onChange={this.handleInput}\n                          ></input>\n                        </li>\n                        <li>\n                          <button className=\"button primary\" type=\"submit\">\n                            Checkout\n                          </button>\n                        </li>\n                      </ul>\n                    </form>\n                  </div>\n                </Fade>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    order: state.order.order,\n    cartItems: state.cart.cartItems,\n  }),\n  { removeFromCart, \n    createOrder, clearOrder \n  }\n)(Cart);\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const addToCart = (product) => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.slice();\n  let alreadyExists = false;\n  cartItems.forEach((x) => {\n    if (x._id === product._id) {\n      alreadyExists = true;\n      x.count++;\n    }\n  });\n  if (!alreadyExists) {\n    cartItems.push({ ...product, count: 1 });\n  }\n  dispatch({\n    type: ADD_TO_CART,\n    payload: { cartItems },\n  });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};\n\nexport const removeFromCart = (product) => (dispatch, getState) => {\n  const cartItems = getState()\n    .cart.cartItems.slice()\n    .filter((x) => x._id !== product._id);\n  dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n};\n","import { CREATE_ORDER, CLEAR_CART, CLEAR_ORDER, FETCH_ORDERS } from \"../types\";\n\nexport const createOrder = (order) => (dispatch) => {\n  \n  alert(`${order.cartItems.length} items of total $${order.total} placed by ${order.name} `);\n\n  // dispatch({\n  //   type: CREATE_ORDER,\n  // })\n  console.log(order);\n  localStorage.clear(\"cartItems\");\n  dispatch({ type: CLEAR_CART });\n};\nexport const clearOrder = () => (dispatch) => {\n  dispatch({ type: CLEAR_ORDER });\n};\nexport const fetchOrders = () => (dispatch) => {\n  fetch(\"data.json\")\n    .then((res) => res.json())\n    .then((data) => {\n      dispatch({ type: FETCH_ORDERS, payload: data });\n    });\n};\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterProducts, sortProducts } from \"../actions/productActions\";\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return !this.props.filteredProducts ? (\r\n      <div>Loading...</div>\r\n    ) : (\r\n      <div className=\"filter\">\r\n        <div className=\"filter-result\">\r\n          {this.props.filteredProducts.length} Products\r\n        </div>\r\n        <div className=\"filter-sort\">\r\n          Order{\" \"}\r\n          <select\r\n            value={this.props.sort}\r\n            onChange={(e) =>\r\n              this.props.sortProducts(\r\n                this.props.filteredProducts,\r\n                e.target.value\r\n              )\r\n            }\r\n          >\r\n            <option value=\"latest\">Latest</option>\r\n            <option value=\"lowest\">Lowest</option>\r\n            <option value=\"highest\">Highest</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"filter-size\">\r\n          Filter{\" \"}\r\n          <select\r\n            value={this.props.size}\r\n            onChange={(e) =>\r\n              this.props.filterProducts(this.props.products, e.target.value)\r\n            }\r\n          >\r\n            <option value=\"\">ALL</option>\r\n            <option value=\"XS\">XS</option>\r\n            <option value=\"S\">S</option>\r\n            <option value=\"M\">M</option>\r\n            <option value=\"L\">L</option>\r\n            <option value=\"XL\">XL</option>\r\n            <option value=\"XXL\">XXL</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  (state) => ({\r\n    size: state.products.size,\r\n    sort: state.products.sort,\r\n    products: state.products.items,\r\n    filteredProducts: state.products.filteredItems,\r\n  }),\r\n  {\r\n    filterProducts,\r\n    sortProducts,\r\n  }\r\n)(Filter);\r\n","import { FETCH_PRODUCTS, FILTER_PRODUCTS_BY_SIZE, ORDER_PRODUCTS_BY_PRICE } from \"../types\";\r\n\r\nexport const fetchProducts = () => async (dispatch) =>{\r\n    // const res = await fetch(\"data.json\");\r\n    // const data = await res.json();\r\n    // console.log(data);\r\n    // dispatch({\r\n    //     type: FETCH_PRODUCTS,\r\n    //     payload: data,\r\n    // })\r\n\r\n    fetch('data.json'\r\n    ,{\r\n      headers : { \r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n       }\r\n    }\r\n    )\r\n      .then(function(response){\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then(function(myJson) {\r\n        console.log(myJson);\r\n        dispatch({\r\n            type: FETCH_PRODUCTS,\r\n            payload: myJson,\r\n        })\r\n        console.log(\"myjson\");\r\n      });\r\n}\r\n\r\nexport const filterProducts = (products,size) => (dispatch) => {\r\n  dispatch({\r\n    type: FILTER_PRODUCTS_BY_SIZE,\r\n    payload: {\r\n      size: size,\r\n      items: size === \"\" ? products : products.filter((x)=> x.availableSizes.indexOf(size) >= 0),\r\n    }\r\n  })\r\n}\r\n\r\nexport const sortProducts = (filteredProducts, sort) => (dispatch) => {\r\n  const sortedProducts = filteredProducts.slice();\r\n  if (sort === \"latest\") {\r\n    sortedProducts.sort((a, b) => (a._id > b._id ? 1 : -1));\r\n  } else {\r\n    sortedProducts.sort((a, b) =>\r\n      sort === \"lowest\"\r\n        ? a.price > b.price\r\n          ? 1\r\n          : -1\r\n        : a.price > b.price\r\n        ? -1\r\n        : 1\r\n    );\r\n  }\r\n  console.log(sortedProducts);\r\n  dispatch({\r\n    type: ORDER_PRODUCTS_BY_PRICE,\r\n    payload: {\r\n      sort: sort,\r\n      items: sortedProducts,\r\n    },\r\n  });\r\n};","import React, { Component } from \"react\";\r\nimport formatCurrency from \"../util\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Modal from \"react-modal\";\r\nimport Zoom from \"react-reveal/Zoom\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchProducts } from \"../actions/productActions\";\r\nimport { addToCart } from \"../actions/cartActions\";\r\n\r\nclass Products extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      product: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchProducts();\r\n  }\r\n  openModal = (product) => {\r\n    this.setState({ product });\r\n  };\r\n  closeModal = () => {\r\n    this.setState({ product: null });\r\n  };\r\n  render() {\r\n    const { product } = this.state;\r\n    return (\r\n      <div>\r\n        <Fade bottom cascade>\r\n          {!this.props.products ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <ul className=\"products\">\r\n              {this.props.products.map((product) => (\r\n                <li key={product._id}>\r\n                  <div className=\"product\">\r\n                    <a\r\n                      href={\"#\" + product._id}\r\n                      onClick={() => this.openModal(product)}\r\n                    >\r\n                      <img src={product.image} alt={product.title}></img>\r\n                      <p>{product.title}</p>\r\n                    </a>\r\n                    <div className=\"product-price\">\r\n                      <div>{formatCurrency(product.price)}</div>\r\n                      <button\r\n                        onClick={() => this.props.addToCart(product)}\r\n                        className=\"button primary\"\r\n                      >\r\n                        Add To Cart\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </Fade>\r\n        {product && (\r\n          <Modal isOpen={true} onRequestClose={this.closeModal}>\r\n            <Zoom>\r\n              <button className=\"close-modal\" onClick={this.closeModal}>\r\n                x\r\n              </button>\r\n              <div className=\"product-details\">\r\n                <img src={product.image} alt={product.title}></img>\r\n                <div className=\"product-details-description\">\r\n                  <p>\r\n                    <strong>{product.title}</strong>\r\n                  </p>\r\n                  <p>{product.description}</p>\r\n                  <p>\r\n                    Avaiable Sizes:{\" \"}\r\n                    {product.availableSizes.map((x) => (\r\n                      <span>\r\n                        {\" \"}\r\n                        <button className=\"button\">{x}</button>\r\n                      </span>\r\n                    ))}\r\n                  </p>\r\n                  <div className=\"product-price\">\r\n                    <div>{formatCurrency(product.price)}</div>\r\n                    <button\r\n                      className=\"button primary\"\r\n                      onClick={() => {\r\n                        this.props.addToCart(product);\r\n                        this.closeModal();\r\n                      }}\r\n                    >\r\n                      Add To Cart\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Zoom>\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  (state) => ({ products: state.products.filteredItems }),\r\n  {\r\n    fetchProducts,\r\n    addToCart\r\n  }\r\n)(Products);\r\n","import {createStore, applyMiddleware,compose, combineReducers} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderReducer } from './reducers/orderReducers';\r\nimport {productsReducer} from './reducers/productReducers'\r\n\r\nconst initialState = {};\r\nconst composeEnhacer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(combineReducers({\r\n    products: productsReducer,\r\n    cart: cartReducer,\r\n    order: orderReducer\r\n    }),\r\n    initialState,\r\n    composeEnhacer(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import {\r\n    FETCH_PRODUCTS,\r\n    FILTER_PRODUCTS_BY_SIZE,\r\n    ORDER_PRODUCTS_BY_PRICE,\r\n  } from \"../types\";\r\n  \r\n  export const productsReducer = (state = {}, action) => {\r\n    \r\n    switch (action.type) {\r\n\r\n      case FILTER_PRODUCTS_BY_SIZE:\r\n        // const pload = action.payload.products;\r\n        return {\r\n          ...state,\r\n          size: action.payload.size,\r\n          filteredItems: action.payload.items,\r\n        };\r\n      case ORDER_PRODUCTS_BY_PRICE:\r\n        // const pload = action.payload.products;\r\n        return {\r\n          ...state,\r\n          sort: action.payload.sort,\r\n          filteredItems: action.payload.items,\r\n        };\r\n      case FETCH_PRODUCTS:\r\n        const pload = action.payload.products;\r\n        return { items: pload, filteredItems: pload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../types\";\n\nexport const cartReducer = (\n  state = { cartItems: JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\") },\n  action\n) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return { cartItems: action.payload.cartItems };\n    case REMOVE_FROM_CART:\n      return { cartItems: action.payload.cartItems };\n    default:\n      return state;\n  }\n};\n","import { CREATE_ORDER, CLEAR_ORDER, FETCH_ORDERS } from \"../types\";\n\nconst orderReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CREATE_ORDER:\n      return { order: action.payload };\n    case CLEAR_ORDER:\n      return { order: null };\n    case FETCH_ORDERS:\n      return { orders: action.payload };\n    default:\n      return state;\n  }\n};\nexport { orderReducer };\n","import React from 'react'\nimport { Provider } from 'react-redux';\nimport Cart from './components/Cart';\nimport Filter from './components/Filter';\nimport Products from './components/Products';\n\nimport store from './store';\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {\n      cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n    }\n  }\n\n  createOrder = (order) =>{\n    alert(\"Need to save order for \"+order.name);\n  }\n\n  // addToCart = (product) =>{\n  //   const cartItems = this.state.cartItems.slice();\n  //   let alreadyInCart = false;\n  //   cartItems.forEach(item =>{\n  //     if(item._id === product._id)\n  //     {\n  //       item.count++;\n  //       alreadyInCart = true;\n  //     }\n  //   });\n  //   if(!alreadyInCart)\n  //   {\n  //     cartItems.push({...product, count:1})\n  //   }\n  //   this.setState({\n  //     cartItems\n  //   })\n  //   localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  // };\n\n  // removeFromCart = (product) =>{\n  //   const cartItems = this.state.cartItems.slice();\n  //   this.setState({cartItems:cartItems.filter(x =>x._id !== product._id) });\n  //   localStorage.setItem(\"cartItems\", JSON.stringify(cartItems.filter(x =>x._id !== product._id)));\n  // }\n\n\n  render(){\n    return (\n      <Provider store={store} >\n      <div className=\"grid-container\">\n        <header className=\"App-header\">\n          <a href=\"/\">React E-Commerce</a>\n        </header>\n        <main>\n          <div className=\"content\">\n            <div className=\"main\">\n                <Filter/>\n                <Products />\n            </div>\n            <div className=\"sidebar\">\n                <Cart />\n            </div>\n          </div>\n          \n        </main>\n        <footer>\n          All right is reserved.\n        </footer>\n      </div>\n      </Provider>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}